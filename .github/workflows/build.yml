name: CI

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  lint-and-typecheck:
    name: Lint & Type Check
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Run TypeScript type check (renderer)
        run: npx tsc --noEmit
        continue-on-error: false
      
      - name: Run TypeScript type check (electron)
        run: npx tsc -p electron --noEmit
        continue-on-error: false
      
      - name: Check for console.logs in production code
        run: |
          if grep -r "console\.log\|console\.error\|console\.warn" src/ electron/ --exclude-dir=node_modules --exclude="*.test.*" --exclude="renderer.tsx" --include="*.ts" --include="*.tsx"; then
            echo "⚠️ Found console statements in production code (allowed in dev, but check if intentional)"
            exit 0
          else
            echo "✅ No console statements found"
          fi
        continue-on-error: true

  build:
    name: Build & Package
    runs-on: ${{ matrix.os }}
    needs: lint-and-typecheck
    
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        node-version: [20.x]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Compile Electron TypeScript
      run: npm run build:electron
    
    - name: Build Vite project
      run: npm run build
      env:
        CI: true
    
    - name: Package application
      run: npm run pack
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      continue-on-error: true
    
    - name: Upload artifacts (Windows)
      uses: actions/upload-artifact@v4
      if: matrix.os == 'windows-latest'
      with:
        name: clappper-windows
        path: dist/**/*
        retention-days: 7
    
    - name: Upload artifacts (macOS)
      uses: actions/upload-artifact@v4
      if: matrix.os == 'macos-latest'
      with:
        name: clappper-macos
        path: dist/**/*
        retention-days: 7
    
    - name: Upload artifacts (Linux)
      uses: actions/upload-artifact@v4
      if: matrix.os == 'ubuntu-latest'
      with:
        name: clappper-linux
        path: dist/**/*
        retention-days: 7
    
    - name: Report status
      run: echo "✅ CI checks passed for ${{ matrix.os }}"

